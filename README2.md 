# Super Trunfo de Cidades

## Descri√ß√£o do Projeto
Este projeto √© uma implementa√ß√£o simples do jogo **Super Trunfo** utilizando a linguagem **C**. O objetivo √© criar e armazenar duas cartas de cidades, contendo informa√ß√µes como:
- Estado
- C√≥digo da carta
- Nome da cidade
- Popula√ß√£o
- √Årea
- PIB
- N√∫mero de pontos tur√≠sticos

O desafio principal foi seguir as restri√ß√µes impostas pelo projeto, que proibia o uso de **estruturas de repeti√ß√£o** (como `for` ou `while`) e **estruturas de decis√£o** (como `if` ou `else`).

## Funcionalidades
- O usu√°rio insere manualmente os dados de duas cidades.
- Os dados s√£o armazenados e exibidos na tela ao final da execu√ß√£o.

## Desafios Enfrentados
1. **Problemas com buffer do teclado**: O `scanf()` deixava caracteres `\n` no buffer, fazendo com que algumas entradas fossem "puladas".
   - **Solu√ß√£o:** Usei `getchar();` ap√≥s cada `scanf()` para limpar o buffer corretamente.

2. **Restri√ß√£o de n√£o usar loops ou condi√ß√µes**:
   - Como alternativa, todas as entradas foram feitas manualmente e sequencialmente, sem a possibilidade de reutilizar c√≥digo para evitar repeti√ß√µes.

3. **Entrada de strings**: O `scanf("%s", variavel)` n√£o l√™ espa√ßos, o que impedia a entrada correta de nomes de cidades.
   - **Solu√ß√£o:** Usei `scanf(" %[^
]", variavel);` para capturar strings com espa√ßos.

## Como Executar
1. Baixe ou clone este reposit√≥rio.
2. Compile o arquivo em um terminal usando:
   ```sh
   gcc super_trunfo.c -o super_trunfo
   ```
3. Execute o programa:
   ```sh
   ./super_trunfo
   ```

## Tecnologias Utilizadas
- Linguagem C
- Compilador **GCC**
- Terminal/Prompt de Comando

## Melhorias Futuras
- Melhorar a estrutura do c√≥digo utilizando fun√ß√µes para evitar repeti√ß√£o.
- Implementar um sistema de compara√ß√£o entre as cartas.
- Criar uma vers√£o que suporte m√∫ltiplas rodadas e jogadores.

---
Este projeto foi um excelente exerc√≠cio para refor√ßar conceitos b√°sicos da linguagem C e trabalhar com manipula√ß√£o de entradas e sa√≠das. üöÄ

